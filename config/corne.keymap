/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <&kp BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
  };

//// Layer definitions
#define BASE 0
#define SYM 1
#define MODS 2
#define FNC 3
#define SETTINGS 4
// -----------------

#define XXXXX &none
#define _____ &trans

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;              // repeat on tap-into-hold
    hold-trigger-key-positions = <0>;  // tap on interrupt
};

#define QUICK_TAP_MS 175

/ {        
        combos {
                compatible = "zmk,combos";

                COMBO(esc, ESC, 2 3)
                COMBO(tab, TAB, 3 4)
                COMBO(caps, CAPS, 13 14)
                COMBO(equal, EQUAL, 14 15)
                COMBO(enter, ENTER, 15 16)
 //               COMBO(lt, LT, 26 27)
 //               COMBO(gt, GT, 27 28)
 //               COMBO(at, AT, 2 14)
 //               COMBO(hash, HASH, 3 15)
 //               COMBO(dllr, DLLR, 4 16)
 //               COMBO(prcnt, PRCNT, 5 17)
 //               COMBO(excl, EXCL, 14 26)
 //               COMBO(grave, GRAVE, 15 27)
 //               COMBO(tilde, TILDE, 17 29)
 //
 //               COMBO(lbrc, LBRC, 7 8)
 //               COMBO(rbrc, RBRC, 8 9)
 //               COMBO(lpar, LPAR, 19 20)
 //               COMBO(rpar, RPAR, 20 21)
 //               COMBO(lbkt, LBKT, 31 32)
 //               COMBO(rbkt, RBKT, 32 33)
 //               COMBO(caret, CARET, 6 18)
 //               COMBO(plus, PLUS, 7 19)
 //               COMBO(star, STAR, 8 20)
 //               COMBO(amps, AMPS, 9 21)
 //               COMBO(under, UNDER, 18 30)
 //               COMBO(minus, MINUS, 19 31)
 //               COMBO(bslh, BSLH, 20 32)
 //               COMBO(pipe, PIPE, 21 33)
        };

        keymap {
                compatible = "zmk,keymap";

// Base alpha Layer
                default_layer {
                    bindings = <
XXXXX &kp Q &kp W &kp E &kp R    &kp T               &kp Y          &kp U   &kp I     &kp O   &kp P    XXXXX
XXXXX &kp A &kp S &kp D &kp F    &kp G               &kp H          &kp J   &kp K     &kp L   &kp SEMI XXXXX
XXXXX &kp Z &kp X &kp C &kp V    &kp B               &kp N          &kp M   &kp COMMA &kp DOT &kp FSLH XXXXX
                  XXXXX &sl MODS &mt LSHFT SPACE     &mt LCTRL BSPC &sl SYM XXXXX
                    >;
                };

// Numbers and high frequency symbols
                sym_layer {
                    bindings = <
XXXXX &kp N1 &kp N2    &kp N3   &kp N4   &kp N5        &kp N6   &kp N7    &kp N8    &kp N9   &kp N0   XXXXX
XXXXX &kp LT &kp DLLR  &kp LPAR &kp LBRC &kp LBKT      &kp STAR &kp EQUAL &kp MINUS &kp PLUS &kp AMPS XXXXX
XXXXX &kp GT &kp PRCNT &kp RPAR &kp RBRC &kp RBKT      &kp AT   &kp EXCL  &kp UNDER &kp HASH &kp PIPE XXXXX
                       XXXXX    &mo FNC  XXXXX         &kp SQT  &kp DQT   XXXXX
                    >;
                };

// Main modifiers and arrow keys and remaining symbols
		mods_layer {
		        bindings = <
XXXXX &kp ESC   &kp CAPS  &kp LCTRL &kp LALT   &kp LGUI      &kp HOME     &kp PG_DN &kp PG_UP &kp END   &kp CARET XXXXX
XXXXX &sk LALT  &sk LGUI  &sk LCTRL &sk LSHIFT &kp LALT      &kp LEFT     &kp DOWN  &kp UP    &kp RIGHT &kp GRAVE XXXXX
XXXXX &kp LG(Z) &kp LG(X) &kp LG(C) &kp TAB    &kp LG(V)     &kp LA(BSPC) &kp BSPC  &kp DEL   &kp TILDE &kp BSLH  XXXXX
                          XXXXX     XXXXX      &mo SETTINGS  &kp ENTER    &mo FNC   XXXXX
		        >;
		};

// Function keys with modifiers
       		fnc_layer {
		        bindings = <
XXXXX &kp F1    &kp F2    &kp F3    &kp F4     &kp F5         &kp F6       &kp F7   &kp F8          &kp F9 &kp F10 XXXXX
XXXXX &sk LALT  &sk LGUI  &sk LCTRL &sk LSHIFT &kp LCTRL      &kp F11      &kp F12  &kp PRINTSCREEN XXXXX  XXXXX   XXXXX
XXXXX &kp LC(Z) &kp LC(X) &kp LC(C) &kp TAB    &kp LC(V)      &kp LC(BSPC) &kp BSPC &kp DEL         XXXXX  XXXXX   XXXXX
                          XXXXX     XXXXX      XXXXX          XXXXX        XXXXX    XXXXX
		        >;
		};

// BT Settings
       		settings_layer {
		        bindings = <
XXXXX XXXXX       XXXXX XXXXX &bt BT_CLR &bt BT_SEL 0      &bt BT_SEL 3 &bt BT_CLR XXXXX XXXXX XXXXX       XXXXX
XXXXX &kp O       XXXXX XXXXX XXXXX      &bt BT_SEL 1      &bt BT_SEL 4 XXXXX      XXXXX XXXXX &kp A       XXXXX
XXXXX &bootloader XXXXX XXXXX XXXXX      &bt BT_SEL 2      &bt BT_SEL 5 XXXXX      XXXXX XXXXX &bootloader XXXXX
                        XXXXX XXXXX      XXXXX             XXXXX        XXXXX      XXXXX
		        >;
		};
        };
};
