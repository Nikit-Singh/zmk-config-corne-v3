/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define TRI     3

/ {
        behaviors {
                gqt: global-quick-tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "GLOBAL_QUICK_TAP";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <200>;
                        quick-tap-ms = <125>;
                        global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC          &kp Q          &kp W        &kp E        &kp R          &kp T                  &kp Y          &kp U        &kp I       &kp O        &kp P           &kp MINUS
   &mt LALT CAPS    &mt LCTRL A    &mt LGUI S   &lt 2 D      &mt LSHFT F    &kp G                  &kp H          &mt LSHFT J  &lt 1 K     &mt LGUI L   &mt LCTRL SEMI  &kp SQT
   &kp GRAVE        &kp Z          &kp X        &kp C        &kp V          &kp B                  &kp N          &kp M        &kp COMMA   &kp DOT      &kp FSLH        &kp BSLH
                                                &kp LGUI     &lt 3 TAB      &mt LCTRL SPACE        &mt LALT BKSP  &lt 1 RET    &mt LGUI DEL
                        >;
                };

                lower_layer {
                        bindings = <
   &kp ESC    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5         &kp F1   &kp F2      &kp F3    &kp F4      &kp F5      &kp F6
   &kp LCTRL  &kp N6  &kp N7  &kp N8    &kp N9  &kp N0         &kp F7   &kp F8      &kp F9    &kp F10     &kp F11     &kp F12
   &kp LSHFT  &none   &none   &none     &none   &none          &none    &kp LSHFT   &kp LALT  &kp LGUI    &kp LCTRL   &none
                              &kp LGUI  &trans  &kp SPACE      &none    &none       &none
                        >;
                };

                raise_layer {
                        bindings = <
   &kp ESC     &none    &none    &none      &none    &none                  &kp EXCL    &kp AT     &kp HASH  &kp DLLR &kp PRCNT       &kp CARET
   &kp LCTRL   &none    &none    &none      &none    &none                  &kp LBKT    &kp LBRC   &kp LPAR  &kp LT   &kp KP_MULTIPLY &kp AMPS
   &kp LSHFT   &none    &none    &none      &none    &none                  &kp RBKT    &kp RBRC   &kp RPAR  &kp GT   &kp MINUS       &kp UNDER
                      	         &kp LGUI   &none    &mt LCTRL SPACE        &kp EQUAL   &kp RET    &kp BKSP
                        >;
                };

                tri_layer {
                        bindings = <
   &kp ESC      &none         &none         &none         &none        &none                 &kp C_PREV         &kp C_VOL_DN     &kp C_VOL_UP       &kp C_NEXT    &kp C_MUTE       &kp K_LOCK
   &kp LCTRL    &kp LCTRL     &kp LGUI      &kp LALT      &kp LSHFT    &none                 &kp LEFT           &kp DOWN         &kp UP             &kp RIGHT     &none            &none
   &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3 &bootloader           &none              &none            &none              &none         &none            &&bootloader
                    	                    &none         &none        &none                 &kp C_PLAY_PAUSE   &kp C_MUTE       &kp C_SNAPSHOT
                        >;
                };
        };
};
